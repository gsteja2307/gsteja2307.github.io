---
import SunIcon from '@/components/icons/SunIcon';
import MoonIcon from '@/components/icons/MoonIcon';
---

<script>
	class themeToggle extends HTMLElement {
		constructor() {
			super();
			const button = this.querySelector('button') as HTMLButtonElement;

			if (button) {
				button.addEventListener('click', (e) => {
					if (e.currentTarget instanceof HTMLButtonElement) {
						let isPressed = e.currentTarget.getAttribute('aria-pressed') === 'true';
						let themeChangeEvent = new CustomEvent('theme-change', {
							detail: {
								theme: isPressed ? 'light' : 'dark',
							},
						});
						// dispatch event -> ThemeProvider.astro
						document.dispatchEvent(themeChangeEvent);
						button.setAttribute('aria-pressed', String(!isPressed));
					}
				});
			}
		}
	}

	if ('customElements' in window) {
		customElements.define('theme-toggle', themeToggle);
	}
</script>

<theme-toggle class="relative h-9 w-9">
	<button
		id="toggle-theme"
		class="group flex h-9 w-9 items-center justify-center rounded-full bg-gray-100 text-gray-600 transition-all duration-200 hover:scale-110 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700"
		aria-label="Toggle Theme"
	>
		<span
			class="absolute rotate-90 scale-0 opacity-0 transition-all duration-200 group-aria-pressed:rotate-0 group-aria-pressed:scale-100 group-aria-pressed:opacity-100"
		>
			<SunIcon />
		</span>

		<span
			class="absolute rotate-90 scale-0 opacity-0 transition-all duration-200 group-aria-[pressed=false]:rotate-0 group-aria-[pressed=false]:scale-100 group-aria-[pressed=false]:opacity-100"
		>
			<MoonIcon />
		</span>
	</button>
</theme-toggle>

<script is:inline>
	const button = document.getElementById('toggle-theme');

	function setButtonPresssed() {
		const bodyThemeIsDark = document.documentElement.classList.contains('dark');
		button.setAttribute('aria-pressed', String(bodyThemeIsDark));
	}
	setButtonPresssed();
</script>
