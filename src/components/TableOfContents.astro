---
import TableOfContentsHeading from '@/components/TabletOfContentsHeading'

const { headings } = Astro.props

type TableOfContent = {
	depth: number
	text: string
	slug: string
	subheadings: TableOfContent[]
}

const toc = buildToc(headings)
function buildToc(headings: TableOfContent[]) {
	let toc: TableOfContent[] = []
	let parentHeadings = new Map()
	headings.forEach((h) => {
		let heading = { ...h, subheadings: [] }
		parentHeadings.set(heading.depth, heading)
		// Change 2 to 1 if your markdown includes your <h1>
		if (heading.depth === 1 || heading.depth === 2) {
			toc.push(heading)
		} else {
			parentHeadings.get(heading.depth - 1).subheadings.push(heading)
		}
	})
	return toc
}
---

<nav class='max-w-xs dark:text-black h-[70vh] flex flex-col'>
	<p class='font-bold mb-4 text-xl dark:text-white sticky top-0 bg-white dark:bg-gray-900 pb-2 z-10'>Index</p>
	<div class='flex-1 overflow-y-auto scrollbar-hide'>
		<ul class='[text-wrap:balance] flex flex-col gap-2 pb-4'>
			{toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
		</ul>
	</div>
</nav>

<style>
	.scrollbar-hide {
		-ms-overflow-style: none;  /* Internet Explorer 10+ */
		scrollbar-width: none;  /* Firefox */
	}
	.scrollbar-hide::-webkit-scrollbar {
		display: none;  /* Safari and Chrome */
	}
</style>
