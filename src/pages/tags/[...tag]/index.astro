---
import BaseLayout from '@/layouts/BaseLayout'
import ListPosts from '@/components/ListPosts'
import { getTags, getPostByTag, getTagsWithCount } from '@/utils'

export async function getStaticPaths() {
	const tags = await getTags()

	return tags.map((tag) => ({
		params: { tag },
		props: { tag }
	}))
}

const { tag } = Astro.props
const posts = await getPostByTag(tag)
const tagsWithCount = await getTagsWithCount()
const currentTagData = tagsWithCount.find(t => t.tag === tag)
const relatedTags = tagsWithCount.filter(t => t.tag !== tag).slice(0, 6)
---

<BaseLayout title={`Posts tagged with "${tag}"`}>
	<div class="container mx-auto px-4 py-8 max-w-6xl">
		<!-- Header Section -->
		<div class="mb-12 text-center">
			<div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mb-4">
				<svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
				</svg>
			</div>

			<h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
				Posts tagged with
				<span class="bg-gradient-to-r from-blue-600 via-purple-600 to-blue-800 bg-clip-text text-transparent dark:from-blue-400 dark:via-purple-400 dark:to-blue-300 capitalize">
					#{tag}
				</span>
			</h1>

			<p class="text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto mb-6">
				{posts.length === 1
					? `Found ${posts.length} post`
					: `Found ${posts.length} posts`} with this tag
			</p>

			<!-- Tag Stats -->
			<div class="inline-flex items-center space-x-6 bg-white dark:bg-gray-800 rounded-full px-8 py-4 border border-gray-200 dark:border-gray-700 shadow-lg">
				<div class="text-center">
					<div class="text-2xl font-bold text-blue-600 dark:text-blue-400">{posts.length}</div>
					<div class="text-sm text-gray-500 dark:text-gray-400">Posts</div>
				</div>
				{currentTagData && (
					<div class="text-center border-l border-gray-200 dark:border-gray-700 pl-6">
						<div class="text-2xl font-bold text-purple-600 dark:text-purple-400">
							#{tagsWithCount.findIndex(t => t.tag === tag) + 1}
						</div>
						<div class="text-sm text-gray-500 dark:text-gray-400">Popularity</div>
					</div>
				)}
			</div>
		</div>

		<!-- Navigation -->
		<div class="mb-8 flex flex-col sm:flex-row items-center justify-between gap-4">
			<a
				href="/tags"
				class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors"
			>
				<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
				</svg>
				Back to All Tags
			</a>

			<!-- Share Button -->
			<button
				onclick="navigator.share ? navigator.share({title: document.title, url: window.location.href}) : navigator.clipboard.writeText(window.location.href)"
				class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-400 bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
			>
				<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
				</svg>
				Share
			</button>
		</div>

		<!-- Posts List -->
		{posts.length > 0 ? (
			<div class="mb-12">
				<ListPosts posts={posts} />
			</div>
		) : (
			<div class="text-center py-16">
				<svg class="w-24 h-24 mx-auto text-gray-300 dark:text-gray-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
				</svg>
				<h3 class="text-xl font-medium text-gray-900 dark:text-white mb-2">No posts found</h3>
				<p class="text-gray-500 dark:text-gray-400 mb-6">There are no posts with the "{tag}" tag yet.</p>
				<a
					href="/tags"
					class="inline-flex items-center px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors"
				>
					Explore Other Tags
				</a>
			</div>
		)}

		<!-- Related Tags -->
		{relatedTags.length > 0 && (
			<div class="border-t border-gray-200 dark:border-gray-700 pt-12">
				<h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center">
					<svg class="w-6 h-6 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
					</svg>
					Related Tags
				</h2>
				<div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4">
					{relatedTags.map((tagData) => (
						<a
							href={`/tags/${tagData.tag}`}
							class="group flex flex-col items-center p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-600 hover:shadow-lg transition-all duration-200 transform hover:scale-105"
						>
							<div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform">
								<span class="text-white text-sm font-bold">#</span>
							</div>
							<span class="text-sm font-medium text-gray-900 dark:text-white capitalize mb-1">
								{tagData.tag}
							</span>
							<span class="text-xs text-gray-500 dark:text-gray-400">
								{tagData.count} {tagData.count === 1 ? 'post' : 'posts'}
							</span>
						</a>
					))}
				</div>
			</div>
		)}
	</div>
</BaseLayout>
